/** Задание 10: Города
 * Напишите программу для хранения названия городов. Пользователь может сделать 4 действия:
 * - Добавить название города в программу.
 * - Посмотреть в консоли список всех добавленных городов
 * - Посмотреть список добавленных городов без повторений
 * - Выход из программы
 * Для хранения используйте коллекцию типа List. */
fun main(args: Array<String>) {
    var isFinished = false // флаг выхода из программы для ветки главного меню
    val cityList = mutableListOf<String>()

    println("Программа для хранения названия городов.")

    while (!isFinished) {

        println("Выберите желаемое действие [1-4]:")
        println("1. Добавить название города")
        println("2. Посмотреть список всех городов в коллекции")
        println("3. Посмотреть список всех городов в коллекции без повторений")
        println("4. Выход из программы")

        var isCorrectChoice = false // флаг факта корректного ввода для ветки главного меню

        while (!isCorrectChoice) {
            print("Ваш выбор: ")

            val menuChoice = readLine()!!.trim()

            when (menuChoice) {
                "1" -> { // добавление нового города в список
                    var isAddMore = false // флаг для зацикливания ввода нового города (или выхода в меню)

                    while (!isAddMore) {
                        print("Введите название города, который хотите добавить: ")
                        val cityToAdd = readLine()!!.trim()
                        cityList.add(cityToAdd)
                        println("Название города успешно добавлено!")

                        print("Добавить еще? [0-нет, (любой символ)-да]: ")
                        val isAddMoreInput = readLine()!!.trim()
                        if (isAddMoreInput == "0") {
                            isAddMore = true
                        }
                    }
                    println()
                    isCorrectChoice = true
                }
                "2" -> { // просмотреть текущий список добавленных городов
                    if (cityList.size != 0) {
                        println("\nТекущий список городов в коллекции следующий:")
                        var counter = 1
                        for (i in cityList) {
                            println("$counter. $i")
                            counter++
                        }
                    } else {
                        println("Список городов на данный момент пуст!")
                    }

                    print("Продолжить [1] или выйти из программы [2]?: ")
                    when (readLine()!!.trim()) {
                        "1" -> { // пустая реализация (возвращает в главное меню)
                        }
                        "2" -> {
                            print("Спасибо, что воспользовались нашим прекрасным сервисом! Всего хорошего!")
                            isFinished = true
                        }
                        else -> { // возврат в главное меню с информационным сообщением
                            println("Некорректный ввод! Возвращаемся в главное меню...")
                        }
                    }
                    println()
                    isCorrectChoice = true
                }
                "3" -> { // просмотреть текущий список добавленных городов (без дубликатов)
                    if (cityList.size != 0) {
                        println("\nТекущий список городов в коллекции без повторений следующий:")
                        var counter = 1
                        for (i in cityList.toMutableSet()) {
                            println("$counter. $i")
                            counter++
                        }
                    } else {
                        println("Список городов на данный момент пуст!")
                    }

                    print("Продолжить [1] или выйти из программы [0]?: ")
                    when (readLine()!!.trim()) {
                        "1" -> { // пустая реализация (возвращает в главное меню)
                        }
                        "0" -> {
                            print("Спасибо, что воспользовались нашим прекрасным сервисом! Всего хорошего!")
                            isFinished = true
                        }
                        else -> { // возврат в главное меню с информационным сообщением
                            println("Некорректный ввод! Возвращаемся в главное меню...")
                        }
                    }
                    println()
                    isCorrectChoice = true
                }
                "4" -> { // выход из программы
                    println("Спасибо, что воспользовались нашим прекрасным сервисом! Всего хорошего!")
                    isFinished = true
                    isCorrectChoice = true
                }
                else -> { // отображение информационного сообщения и возврат к вводу из главного меню
                    println("Некорректный выбор! Введите целое число от 1 до 4, согласно пунктам меню!")
                }
            }
        }
    }
}